{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1486045362374},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1486045362376},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1486045362376},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1486045362376},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1486045362379},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1486045362379},{"_id":"source/_posts/Build-a-tech-blog-by-hexo.md","hash":"9e2adc88044a0e0b363bc1ecbf80e9e2e8a8a828","modified":1486109657416},{"_id":"source/_posts/Hexo高级功能.md","hash":"a38d38df1123600a6c403634b8bee25ef113ddd2","modified":1486095631658},{"_id":"source/_posts/mesos.md","hash":"89683cbbe6a16f1257efdeab3d136d08916ed664","modified":1485966837757},{"_id":"source/_posts/spark_on_mesos.md","hash":"2013ee0ebf467b5934f0c9e5972eebb02f98d5e7","modified":1485967172812},{"_id":"source/_posts/spark_version_switch.md","hash":"2a293f29f2f83fb643ec24ed3acea9f06273e131","modified":1485966837764},{"_id":"source/_posts/submit-spark-app.md","hash":"5aa843aeb5b9afda7d09349ed21fb18262dba0d2","modified":1485966837767},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1486045362406},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1486045362409},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1486045362411},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1486045362431},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1486045362411},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1486045362409},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1486045362416},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1486045362424},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1486045362426},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1486045362426},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1486045362429},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1486045362426},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1486045362431},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1486045362429},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1486045362434},{"_id":"source/_posts/Build-a-tech-blog-by-hexo/public-key-access-right.jpg","hash":"2f12355dbd96fbcd846f578bfe736355da51db4e","modified":1486105290595},{"_id":"source/_posts/Hexo高级功能/hexo-image-config.jpg","hash":"9a836ead0b370851cf9a8b3c591e272e3a9b1e67","modified":1486094083676},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1486045362471},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1486045362466},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1486045362469},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1486045362474},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1486045362469},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1486045362476},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1486045362476},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1486045362466},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1486045362474},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1486045362474},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1486045362461},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1486045362464},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1486045362466},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1486045362461},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1486045362464},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1486045362476},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1486045362479},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1486045362481},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486045362484},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486045362486},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486045362486},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486045362486},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486045362489},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486045362491},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1486045362489},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1486045362494},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1486045362491},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1486045362489},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1486045362506},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1486045362521},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1486045362519},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1486045362521},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1486045362526},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1486045362521},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1486045362531},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1486045362531},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1486045362529},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1486045362534},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1486045362534},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1486045362539},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1486045362534},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1486045362541},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1486045362536},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1486045362536},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1486045362524},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1486045362524},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1486045362526},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1486045362529},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1486045362526},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486045362534},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486045362539},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1486045362539},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1486045362541},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486045362541},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1486045362544},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1486045362531},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1486045362544},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1486045362549},{"_id":"public/2017/02/03/Hexo高级功能/index.html","hash":"e0b3f8563e4d8485f277dc30ae9452cdb9c0bd16","modified":1486109671495},{"_id":"public/2017/02/02/submit-spark-app/index.html","hash":"8ef828be3a590748cd6f5bac8a56e9df333bb995","modified":1486109671495},{"_id":"public/2017/02/02/spark_version_switch/index.html","hash":"d7632a1199e986058a24136ce3140fa153887e42","modified":1486109671495},{"_id":"public/2017/02/02/spark_on_mesos/index.html","hash":"2cc923f4ec9d35ecf6b9ae01a65d693c0c9a4afc","modified":1486109671496},{"_id":"public/2017/02/02/mesos/index.html","hash":"368c6f5a6c66dbe7d22e6d3c28aa2f7a3e6e2a2f","modified":1486109671496},{"_id":"public/archives/index.html","hash":"e9e963dbb9aea075e02ba5c6a6258d90a476f9cc","modified":1486109671496},{"_id":"public/archives/2017/index.html","hash":"5d0ea7faf069471027c98a693355210401fbbe21","modified":1486109671502},{"_id":"public/archives/2017/02/index.html","hash":"27018dbf5f44189bada4ec8770e6c567e4294149","modified":1486109671502},{"_id":"public/tags/hexo/index.html","hash":"e7c3ef7c24ca63a860a0edb5ba91fa1374512d59","modified":1486109671503},{"_id":"public/2017/02/03/Build-a-tech-blog-by-hexo/index.html","hash":"334e0888516d75b1676de052751640e8563579fb","modified":1486109671503},{"_id":"public/index.html","hash":"346e3d6d8432643a30a5b61a91db87284b15b45a","modified":1486109671503},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486109671520},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486109671520},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486109671521},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486109671521},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486109671521},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486109671521},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1486109671521},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1486109671521},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1486109671521},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486109671522},{"_id":"public/2017/02/03/Build-a-tech-blog-by-hexo/public-key-access-right.jpg","hash":"2f12355dbd96fbcd846f578bfe736355da51db4e","modified":1486109671522},{"_id":"public/2017/02/03/Hexo高级功能/hexo-image-config.jpg","hash":"9a836ead0b370851cf9a8b3c591e272e3a9b1e67","modified":1486109671522},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1486109673660},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1486109673701},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1486109673702},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1486109673702},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486109673703},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1486109673703},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486109673703},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1486109673719},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1486109673719},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1486109673719},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1486109673719},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1486109673733},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1486109673733}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"用hexo构建自己的博客","date":"2017-02-03T03:39:02.000Z","toc":true,"_content":"\n## 必要软件的安装\n\n### 需要安装的软件\n+ nodejs\n+ git(如果打算把整个hexo的源码都用github来管理的话，最好用1.9版本)\n+ github\n\n### github的密匙配置\n\n确认windows下的当前用户名的目录下没有.ssh目录\n\n### 生成SSH Key\n```bash\nssh-keygen -t rsa -C \"your_email@example.com\" \n```\n提示会让输入保存密匙的文件名(含路径)。\n\n生成SSH KEY的时候还要求输入私钥密码\"│Enter passphrase (empty for no passphrase):\"。如果输入一定请记住私钥的密码， 下面导入私钥的时候要用到；如果不输入的话，直接回车即可。\n\n将SSH 私钥增加到ssh-agent:\n\n```bash\n ssh-add ~/.ssh/xyz_rsa\n```\n\n这里会提示输入一次私钥的密码，查看已经add的SSH KEY： \n```bash\n ssh-add -l；\n```\n### github添加密匙\n浏览器登录自己的github页面, 进入\"Account Settings\", 再点击左边的\"SSH Key\"可以看到自己上传过的SSH公钥列表. 再点击\"Add SSH Key\"新增一个公钥, 直接将上面步骤中生成的密匙粘贴即可；\n\n### 测试是否能联通github\n测试SSH Key登录\n```bash\nssh -T git@github.com\n```\n\n如果有问题可以通过命令\n```bash\nssh -v git@github.com\n```\n来查看问题信息\n\n### hexo的安装\n在nodejs的cmd下安装\n\n```bash\n$ npm install -g hexo\n$ npm install hexo-generator-index --save #索引生成器\n$ npm install hexo-generator-archive --save #归档生成器\n$ npm install hexo-generator-category --save #分类生成器\n$ npm install hexo-generator-tag --save #标签生成器\n$ npm install hexo-server --save #本地服务\n$ npm install hexo-deployer-git --save #hexo通过git发布（必装）\n$ npm install hexo-renderer-marked@0.2.7--save #渲染器\n$ npm install hexo-renderer-stylus@0.3.0 --save #渲染器\n```\n\n### 软件使用\n\n+ git命令用github的shell，进入blog的源码目录来输入\n\n+ hexo命令用nodejs的cmd，进入blog的源码目录来输入\n\n## 本地构建hexo的博客\n\n通过nodejs的cmd下建立一个目录hexo-blog。进入该目录后\n\n```bash\n$ hexo init\n```\n\n参考[这里](https://xuanwo.org/2015/03/26/hexo-intor/)，[这里](http://www.jianshu.com/p/017e01718d41)。\n\n### 建立新页面\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 运行本地服务\n\n``` bash\n$ hexo server\n```\n本地hexo已建立成功，测试网址：http://localhost:4000\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n## 用github发布并管理博客\n\n### 构建repository\n+ 登录github\n+ 建立名为zengjay.github.io的repo\n### 本地部署配置\n+ 保证hexo-blog目录下的_config.yml文件deploy有如下格式：\n    \n\tdeploy:\n  \t\ttype: git\n \t\t repo: git@github.com:ZengJay/ZengJay.github.io.git\n \t\t branch: master\n\n**[注意：]()**\n[**type、repo、branch的冒号后面必须有空格**](#),如果type后没空格，运行hexo d不会有反应。\n\n### 只保留hexo的源码在一台本地机器的部署方法\n+ 在本地hexo博客源码目录hexo-blog下将博客部署到远程站点\n\n  ``` bash\n   $ hexo deploy\n  ```\n\n   More info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 在不同机器上对hexo的源码进行版本管理\n\n+ [**在建立好博客的本地源码后，不要部署到github的zengjay.github.com上。**]()\n+ 在hexo-blog目录下构建git的master分支与hexo分支。master分支用来管理博客网页；hexo分支用来管理hexo的源码。\n+ 构建git的master分支\n\n``` bash\n    echo \"# zengjay.github.io\" >> README.md\n    git init\n    git add README.md\n    git commit -m \"first commit\"\n    git remote add origin https://github.com/ZengJay/zengjay.github.io.git\n    git push -u origin maste\n```\n\n+ 构建git的hexo分支\n\n``` bash   \n    git checkout -b hexo //创建并切换到hexo分支\n    git add .\n    git commit -m \"hexo initial commit\"\n    git push -u origin hexo\n```\n\n+ hexo部署\n\n``` bash\n    hexo d\n```\n\n+ 更新hexo源码后，提交到github\n\n```bash\n   git add .\n   git commit -m \"更新内容\"\n   git push -u origin hexo\n```\n\n\n+ 新机器的hexo源码部署\n\n```bash\n\tgit clone -b hexo https://github.com/username/username.git\n```\n\n\n参考[here](https://sawyersun.github.io/2017/01/20/Using-git-branch-manage-hexo-blog/)，[here](http://www.jianshu.com/p/6fb0b287f950)\n\n+ 版本控制和持续集成\n\n参考[here](https://formulahendry.github.io/2016/12/04/hexo-ci/#more)\n\n## 常见问题及解决方法\n\n### github的ssh公匙问题\n\n+ 无法认证github的密匙\n\n\tssh -T git@github.com\n\n出现如下问题\n\n```bash\n\tWarning: Permanently added \"github.com,*.*.*.*\"(RSA) to the list of known hosts.\n\tPermission denied(public key). \n```\n原因：\n\n安装了github for windows，其ssh配置文件中认证文件为~\\.ssh\\github_rsa，ssh-keygen生成的不是此文件，因此，可以重装github，并把github_rsa文件的密匙添加到github网站个人信息中即可。\n\n详细请参考[网站](http://www.cnblogs.com/zjrodger/p/3952692.html)\n\n\n+ 无法联通github\n\n出现如下问题\n    Permission denied (publickey). fatal: Could not read from remote repository.\n    Please make sure you have the correct access rights and the repository exists.\n\n如图所示：\n![](\\public-key-access-right.jpg)\n\n卸载git高版本，然后安装低版本（1.9）的git，可以到[这里](https://github.com/msysgit/msysgit/releases/tag/Git-1.9.5-preview20141217)下载。\n\n参考[网站1](https://github.com/hexojs/hexo/issues/1495),[网站2](http://lijialalala.github.io/2016/04/05/hexoxo-usage/),[网站3](http://www.cognize.me/2015/08/22/msysgiterror/)\n","source":"_posts/Build-a-tech-blog-by-hexo.md","raw":"---\ntitle: 用hexo构建自己的博客\ndate: 2017-02-03 11:39:02\ntags: hexo\ntoc: true\n---\n\n## 必要软件的安装\n\n### 需要安装的软件\n+ nodejs\n+ git(如果打算把整个hexo的源码都用github来管理的话，最好用1.9版本)\n+ github\n\n### github的密匙配置\n\n确认windows下的当前用户名的目录下没有.ssh目录\n\n### 生成SSH Key\n```bash\nssh-keygen -t rsa -C \"your_email@example.com\" \n```\n提示会让输入保存密匙的文件名(含路径)。\n\n生成SSH KEY的时候还要求输入私钥密码\"│Enter passphrase (empty for no passphrase):\"。如果输入一定请记住私钥的密码， 下面导入私钥的时候要用到；如果不输入的话，直接回车即可。\n\n将SSH 私钥增加到ssh-agent:\n\n```bash\n ssh-add ~/.ssh/xyz_rsa\n```\n\n这里会提示输入一次私钥的密码，查看已经add的SSH KEY： \n```bash\n ssh-add -l；\n```\n### github添加密匙\n浏览器登录自己的github页面, 进入\"Account Settings\", 再点击左边的\"SSH Key\"可以看到自己上传过的SSH公钥列表. 再点击\"Add SSH Key\"新增一个公钥, 直接将上面步骤中生成的密匙粘贴即可；\n\n### 测试是否能联通github\n测试SSH Key登录\n```bash\nssh -T git@github.com\n```\n\n如果有问题可以通过命令\n```bash\nssh -v git@github.com\n```\n来查看问题信息\n\n### hexo的安装\n在nodejs的cmd下安装\n\n```bash\n$ npm install -g hexo\n$ npm install hexo-generator-index --save #索引生成器\n$ npm install hexo-generator-archive --save #归档生成器\n$ npm install hexo-generator-category --save #分类生成器\n$ npm install hexo-generator-tag --save #标签生成器\n$ npm install hexo-server --save #本地服务\n$ npm install hexo-deployer-git --save #hexo通过git发布（必装）\n$ npm install hexo-renderer-marked@0.2.7--save #渲染器\n$ npm install hexo-renderer-stylus@0.3.0 --save #渲染器\n```\n\n### 软件使用\n\n+ git命令用github的shell，进入blog的源码目录来输入\n\n+ hexo命令用nodejs的cmd，进入blog的源码目录来输入\n\n## 本地构建hexo的博客\n\n通过nodejs的cmd下建立一个目录hexo-blog。进入该目录后\n\n```bash\n$ hexo init\n```\n\n参考[这里](https://xuanwo.org/2015/03/26/hexo-intor/)，[这里](http://www.jianshu.com/p/017e01718d41)。\n\n### 建立新页面\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 运行本地服务\n\n``` bash\n$ hexo server\n```\n本地hexo已建立成功，测试网址：http://localhost:4000\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n## 用github发布并管理博客\n\n### 构建repository\n+ 登录github\n+ 建立名为zengjay.github.io的repo\n### 本地部署配置\n+ 保证hexo-blog目录下的_config.yml文件deploy有如下格式：\n    \n\tdeploy:\n  \t\ttype: git\n \t\t repo: git@github.com:ZengJay/ZengJay.github.io.git\n \t\t branch: master\n\n**[注意：]()**\n[**type、repo、branch的冒号后面必须有空格**](#),如果type后没空格，运行hexo d不会有反应。\n\n### 只保留hexo的源码在一台本地机器的部署方法\n+ 在本地hexo博客源码目录hexo-blog下将博客部署到远程站点\n\n  ``` bash\n   $ hexo deploy\n  ```\n\n   More info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 在不同机器上对hexo的源码进行版本管理\n\n+ [**在建立好博客的本地源码后，不要部署到github的zengjay.github.com上。**]()\n+ 在hexo-blog目录下构建git的master分支与hexo分支。master分支用来管理博客网页；hexo分支用来管理hexo的源码。\n+ 构建git的master分支\n\n``` bash\n    echo \"# zengjay.github.io\" >> README.md\n    git init\n    git add README.md\n    git commit -m \"first commit\"\n    git remote add origin https://github.com/ZengJay/zengjay.github.io.git\n    git push -u origin maste\n```\n\n+ 构建git的hexo分支\n\n``` bash   \n    git checkout -b hexo //创建并切换到hexo分支\n    git add .\n    git commit -m \"hexo initial commit\"\n    git push -u origin hexo\n```\n\n+ hexo部署\n\n``` bash\n    hexo d\n```\n\n+ 更新hexo源码后，提交到github\n\n```bash\n   git add .\n   git commit -m \"更新内容\"\n   git push -u origin hexo\n```\n\n\n+ 新机器的hexo源码部署\n\n```bash\n\tgit clone -b hexo https://github.com/username/username.git\n```\n\n\n参考[here](https://sawyersun.github.io/2017/01/20/Using-git-branch-manage-hexo-blog/)，[here](http://www.jianshu.com/p/6fb0b287f950)\n\n+ 版本控制和持续集成\n\n参考[here](https://formulahendry.github.io/2016/12/04/hexo-ci/#more)\n\n## 常见问题及解决方法\n\n### github的ssh公匙问题\n\n+ 无法认证github的密匙\n\n\tssh -T git@github.com\n\n出现如下问题\n\n```bash\n\tWarning: Permanently added \"github.com,*.*.*.*\"(RSA) to the list of known hosts.\n\tPermission denied(public key). \n```\n原因：\n\n安装了github for windows，其ssh配置文件中认证文件为~\\.ssh\\github_rsa，ssh-keygen生成的不是此文件，因此，可以重装github，并把github_rsa文件的密匙添加到github网站个人信息中即可。\n\n详细请参考[网站](http://www.cnblogs.com/zjrodger/p/3952692.html)\n\n\n+ 无法联通github\n\n出现如下问题\n    Permission denied (publickey). fatal: Could not read from remote repository.\n    Please make sure you have the correct access rights and the repository exists.\n\n如图所示：\n![](\\public-key-access-right.jpg)\n\n卸载git高版本，然后安装低版本（1.9）的git，可以到[这里](https://github.com/msysgit/msysgit/releases/tag/Git-1.9.5-preview20141217)下载。\n\n参考[网站1](https://github.com/hexojs/hexo/issues/1495),[网站2](http://lijialalala.github.io/2016/04/05/hexoxo-usage/),[网站3](http://www.cognize.me/2015/08/22/msysgiterror/)\n","slug":"Build-a-tech-blog-by-hexo","published":1,"updated":"2017-02-03T08:14:17.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbsjd00000wn4id26icp1","content":"<h2 id=\"必要软件的安装\"><a href=\"#必要软件的安装\" class=\"headerlink\" title=\"必要软件的安装\"></a>必要软件的安装</h2><h3 id=\"需要安装的软件\"><a href=\"#需要安装的软件\" class=\"headerlink\" title=\"需要安装的软件\"></a>需要安装的软件</h3><ul>\n<li>nodejs</li>\n<li>git(如果打算把整个hexo的源码都用github来管理的话，最好用1.9版本)</li>\n<li>github</li>\n</ul>\n<h3 id=\"github的密匙配置\"><a href=\"#github的密匙配置\" class=\"headerlink\" title=\"github的密匙配置\"></a>github的密匙配置</h3><p>确认windows下的当前用户名的目录下没有.ssh目录</p>\n<h3 id=\"生成ssh-key\"><a href=\"#生成SSH-Key\" class=\"headerlink\" title=\"生成SSH Key\"></a>生成SSH Key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"your_email@example.com\"</span></div></pre></td></tr></table></figure>\n<p>提示会让输入保存密匙的文件名(含路径)。</p>\n<p>生成SSH KEY的时候还要求输入私钥密码”│Enter passphrase (empty for no passphrase):”。如果输入一定请记住私钥的密码， 下面导入私钥的时候要用到；如果不输入的话，直接回车即可。</p>\n<p>将SSH 私钥增加到ssh-agent:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-add ~/.ssh/xyz_rsa</div></pre></td></tr></table></figure>\n<p>这里会提示输入一次私钥的密码，查看已经add的SSH KEY：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-add <span class=\"_\">-l</span>；</div></pre></td></tr></table></figure></p>\n<h3 id=\"github添加密匙\"><a href=\"#github添加密匙\" class=\"headerlink\" title=\"github添加密匙\"></a>github添加密匙</h3><p>浏览器登录自己的github页面, 进入”Account Settings”, 再点击左边的”SSH Key”可以看到自己上传过的SSH公钥列表. 再点击”Add SSH Key”新增一个公钥, 直接将上面步骤中生成的密匙粘贴即可；</p>\n<h3 id=\"测试是否能联通github\"><a href=\"#测试是否能联通github\" class=\"headerlink\" title=\"测试是否能联通github\"></a>测试是否能联通github</h3><p>测试SSH Key登录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -T git@github.com</div></pre></td></tr></table></figure></p>\n<p>如果有问题可以通过命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -v git@github.com</div></pre></td></tr></table></figure></p>\n<p>来查看问题信息</p>\n<h3 id=\"hexo的安装\"><a href=\"#hexo的安装\" class=\"headerlink\" title=\"hexo的安装\"></a>hexo的安装</h3><p>在nodejs的cmd下安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo</div><div class=\"line\">$ npm install hexo-generator-index --save <span class=\"comment\">#索引生成器</span></div><div class=\"line\">$ npm install hexo-generator-archive --save <span class=\"comment\">#归档生成器</span></div><div class=\"line\">$ npm install hexo-generator-category --save <span class=\"comment\">#分类生成器</span></div><div class=\"line\">$ npm install hexo-generator-tag --save <span class=\"comment\">#标签生成器</span></div><div class=\"line\">$ npm install hexo-server --save <span class=\"comment\">#本地服务</span></div><div class=\"line\">$ npm install hexo-deployer-git --save <span class=\"comment\">#hexo通过git发布（必装）</span></div><div class=\"line\">$ npm install hexo-renderer-marked@0.2.7--save <span class=\"comment\">#渲染器</span></div><div class=\"line\">$ npm install hexo-renderer-stylus@0.3.0 --save <span class=\"comment\">#渲染器</span></div></pre></td></tr></table></figure>\n<h3 id=\"软件使用\"><a href=\"#软件使用\" class=\"headerlink\" title=\"软件使用\"></a>软件使用</h3><ul>\n<li><p>git命令用github的shell，进入blog的源码目录来输入</p>\n</li>\n<li><p>hexo命令用nodejs的cmd，进入blog的源码目录来输入</p>\n</li>\n</ul>\n<h2 id=\"本地构建hexo的博客\"><a href=\"#本地构建hexo的博客\" class=\"headerlink\" title=\"本地构建hexo的博客\"></a>本地构建hexo的博客</h2><p>通过nodejs的cmd下建立一个目录hexo-blog。进入该目录后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>参考<a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">这里</a>，<a href=\"http://www.jianshu.com/p/017e01718d41\" target=\"_blank\" rel=\"external\">这里</a>。</p>\n<h3 id=\"建立新页面\"><a href=\"#建立新页面\" class=\"headerlink\" title=\"建立新页面\"></a>建立新页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"运行本地服务\"><a href=\"#运行本地服务\" class=\"headerlink\" title=\"运行本地服务\"></a>运行本地服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>本地hexo已建立成功，测试网址：<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a></p>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h2 id=\"用github发布并管理博客\"><a href=\"#用github发布并管理博客\" class=\"headerlink\" title=\"用github发布并管理博客\"></a>用github发布并管理博客</h2><h3 id=\"构建repository\"><a href=\"#构建repository\" class=\"headerlink\" title=\"构建repository\"></a>构建repository</h3><ul>\n<li>登录github</li>\n<li>建立名为zengjay.github.io的repo<h3 id=\"本地部署配置\"><a href=\"#本地部署配置\" class=\"headerlink\" title=\"本地部署配置\"></a>本地部署配置</h3></li>\n<li><p>保证hexo-blog目录下的_config.yml文件deploy有如下格式：</p>\n<p>  deploy:</p>\n<pre><code>type: git\nrepo: git@github.com:ZengJay/ZengJay.github.io.git\nbranch: master\n</code></pre></li>\n</ul>\n<p><strong><a href=\"\">注意：</a></strong><br><a href=\"#\"><strong>type、repo、branch的冒号后面必须有空格</strong></a>,如果type后没空格，运行hexo d不会有反应。</p>\n<h3 id=\"只保留hexo的源码在一台本地机器的部署方法\"><a href=\"#只保留hexo的源码在一台本地机器的部署方法\" class=\"headerlink\" title=\"只保留hexo的源码在一台本地机器的部署方法\"></a>只保留hexo的源码在一台本地机器的部署方法</h3><ul>\n<li><p>在本地hexo博客源码目录hexo-blog下将博客部署到远程站点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p> More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n</li>\n</ul>\n<h3 id=\"在不同机器上对hexo的源码进行版本管理\"><a href=\"#在不同机器上对hexo的源码进行版本管理\" class=\"headerlink\" title=\"在不同机器上对hexo的源码进行版本管理\"></a>在不同机器上对hexo的源码进行版本管理</h3><ul>\n<li><a href=\"\"><strong>在建立好博客的本地源码后，不要部署到github的zengjay.github.com上。</strong></a></li>\n<li>在hexo-blog目录下构建git的master分支与hexo分支。master分支用来管理博客网页；hexo分支用来管理hexo的源码。</li>\n<li>构建git的master分支</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"# zengjay.github.io\"</span> &gt;&gt; README.md</div><div class=\"line\">git init</div><div class=\"line\">git add README.md</div><div class=\"line\">git commit -m <span class=\"string\">\"first commit\"</span></div><div class=\"line\">git remote add origin https://github.com/ZengJay/zengjay.github.io.git</div><div class=\"line\">git push -u origin maste</div></pre></td></tr></table></figure>\n<ul>\n<li>构建git的hexo分支</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b hexo //创建并切换到hexo分支</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"hexo initial commit\"</span></div><div class=\"line\">git push -u origin hexo</div></pre></td></tr></table></figure>\n<ul>\n<li>hexo部署</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure>\n<ul>\n<li>更新hexo源码后，提交到github</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"更新内容\"</span></div><div class=\"line\">git push -u origin hexo</div></pre></td></tr></table></figure>\n<ul>\n<li>新机器的hexo源码部署</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> -b hexo https://github.com/username/username.git</div></pre></td></tr></table></figure>\n<p>参考<a href=\"https://sawyersun.github.io/2017/01/20/Using-git-branch-manage-hexo-blog/\" target=\"_blank\" rel=\"external\">here</a>，<a href=\"http://www.jianshu.com/p/6fb0b287f950\" target=\"_blank\" rel=\"external\">here</a></p>\n<ul>\n<li>版本控制和持续集成</li>\n</ul>\n<p>参考<a href=\"https://formulahendry.github.io/2016/12/04/hexo-ci/#more\" target=\"_blank\" rel=\"external\">here</a></p>\n<h2 id=\"常见问题及解决方法\"><a href=\"#常见问题及解决方法\" class=\"headerlink\" title=\"常见问题及解决方法\"></a>常见问题及解决方法</h2><h3 id=\"github的ssh公匙问题\"><a href=\"#github的ssh公匙问题\" class=\"headerlink\" title=\"github的ssh公匙问题\"></a>github的ssh公匙问题</h3><ul>\n<li><p>无法认证github的密匙</p>\n<p>  ssh -T git@github.com</p>\n</li>\n</ul>\n<p>出现如下问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: Permanently added <span class=\"string\">\"github.com,*.*.*.*\"</span>(RSA) to the list of known hosts.</div><div class=\"line\">Permission denied(public key).</div></pre></td></tr></table></figure>\n<p>原因：</p>\n<p>安装了github for windows，其ssh配置文件中认证文件为~.ssh\\github_rsa，ssh-keygen生成的不是此文件，因此，可以重装github，并把github_rsa文件的密匙添加到github网站个人信息中即可。</p>\n<p>详细请参考<a href=\"http://www.cnblogs.com/zjrodger/p/3952692.html\" target=\"_blank\" rel=\"external\">网站</a></p>\n<ul>\n<li>无法联通github</li>\n</ul>\n<p>出现如下问题<br>    Permission denied (publickey). fatal: Could not read from remote repository.<br>    Please make sure you have the correct access rights and the repository exists.</p>\n<p>如图所示：<br><img src=\"/2017/02/03/Build-a-tech-blog-by-hexo/public-key-access-right.jpg\" alt=\"\"></p>\n<p>卸载git高版本，然后安装低版本（1.9）的git，可以到<a href=\"https://github.com/msysgit/msysgit/releases/tag/Git-1.9.5-preview20141217\" target=\"_blank\" rel=\"external\">这里</a>下载。</p>\n<p>参考<a href=\"https://github.com/hexojs/hexo/issues/1495\" target=\"_blank\" rel=\"external\">网站1</a>,<a href=\"http://lijialalala.github.io/2016/04/05/hexoxo-usage/\" target=\"_blank\" rel=\"external\">网站2</a>,<a href=\"http://www.cognize.me/2015/08/22/msysgiterror/\" target=\"_blank\" rel=\"external\">网站3</a></p>\n","excerpt":"","more":"<h2 id=\"必要软件的安装\"><a href=\"#必要软件的安装\" class=\"headerlink\" title=\"必要软件的安装\"></a>必要软件的安装</h2><h3 id=\"需要安装的软件\"><a href=\"#需要安装的软件\" class=\"headerlink\" title=\"需要安装的软件\"></a>需要安装的软件</h3><ul>\n<li>nodejs</li>\n<li>git(如果打算把整个hexo的源码都用github来管理的话，最好用1.9版本)</li>\n<li>github</li>\n</ul>\n<h3 id=\"github的密匙配置\"><a href=\"#github的密匙配置\" class=\"headerlink\" title=\"github的密匙配置\"></a>github的密匙配置</h3><p>确认windows下的当前用户名的目录下没有.ssh目录</p>\n<h3 id=\"生成SSH-Key\"><a href=\"#生成SSH-Key\" class=\"headerlink\" title=\"生成SSH Key\"></a>生成SSH Key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"your_email@example.com\"</span></div></pre></td></tr></table></figure>\n<p>提示会让输入保存密匙的文件名(含路径)。</p>\n<p>生成SSH KEY的时候还要求输入私钥密码”│Enter passphrase (empty for no passphrase):”。如果输入一定请记住私钥的密码， 下面导入私钥的时候要用到；如果不输入的话，直接回车即可。</p>\n<p>将SSH 私钥增加到ssh-agent:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-add ~/.ssh/xyz_rsa</div></pre></td></tr></table></figure>\n<p>这里会提示输入一次私钥的密码，查看已经add的SSH KEY：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-add <span class=\"_\">-l</span>；</div></pre></td></tr></table></figure></p>\n<h3 id=\"github添加密匙\"><a href=\"#github添加密匙\" class=\"headerlink\" title=\"github添加密匙\"></a>github添加密匙</h3><p>浏览器登录自己的github页面, 进入”Account Settings”, 再点击左边的”SSH Key”可以看到自己上传过的SSH公钥列表. 再点击”Add SSH Key”新增一个公钥, 直接将上面步骤中生成的密匙粘贴即可；</p>\n<h3 id=\"测试是否能联通github\"><a href=\"#测试是否能联通github\" class=\"headerlink\" title=\"测试是否能联通github\"></a>测试是否能联通github</h3><p>测试SSH Key登录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -T git@github.com</div></pre></td></tr></table></figure></p>\n<p>如果有问题可以通过命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -v git@github.com</div></pre></td></tr></table></figure></p>\n<p>来查看问题信息</p>\n<h3 id=\"hexo的安装\"><a href=\"#hexo的安装\" class=\"headerlink\" title=\"hexo的安装\"></a>hexo的安装</h3><p>在nodejs的cmd下安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo</div><div class=\"line\">$ npm install hexo-generator-index --save <span class=\"comment\">#索引生成器</span></div><div class=\"line\">$ npm install hexo-generator-archive --save <span class=\"comment\">#归档生成器</span></div><div class=\"line\">$ npm install hexo-generator-category --save <span class=\"comment\">#分类生成器</span></div><div class=\"line\">$ npm install hexo-generator-tag --save <span class=\"comment\">#标签生成器</span></div><div class=\"line\">$ npm install hexo-server --save <span class=\"comment\">#本地服务</span></div><div class=\"line\">$ npm install hexo-deployer-git --save <span class=\"comment\">#hexo通过git发布（必装）</span></div><div class=\"line\">$ npm install hexo-renderer-marked@0.2.7--save <span class=\"comment\">#渲染器</span></div><div class=\"line\">$ npm install hexo-renderer-stylus@0.3.0 --save <span class=\"comment\">#渲染器</span></div></pre></td></tr></table></figure>\n<h3 id=\"软件使用\"><a href=\"#软件使用\" class=\"headerlink\" title=\"软件使用\"></a>软件使用</h3><ul>\n<li><p>git命令用github的shell，进入blog的源码目录来输入</p>\n</li>\n<li><p>hexo命令用nodejs的cmd，进入blog的源码目录来输入</p>\n</li>\n</ul>\n<h2 id=\"本地构建hexo的博客\"><a href=\"#本地构建hexo的博客\" class=\"headerlink\" title=\"本地构建hexo的博客\"></a>本地构建hexo的博客</h2><p>通过nodejs的cmd下建立一个目录hexo-blog。进入该目录后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>参考<a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\">这里</a>，<a href=\"http://www.jianshu.com/p/017e01718d41\">这里</a>。</p>\n<h3 id=\"建立新页面\"><a href=\"#建立新页面\" class=\"headerlink\" title=\"建立新页面\"></a>建立新页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"运行本地服务\"><a href=\"#运行本地服务\" class=\"headerlink\" title=\"运行本地服务\"></a>运行本地服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>本地hexo已建立成功，测试网址：<a href=\"http://localhost:4000\">http://localhost:4000</a></p>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h2 id=\"用github发布并管理博客\"><a href=\"#用github发布并管理博客\" class=\"headerlink\" title=\"用github发布并管理博客\"></a>用github发布并管理博客</h2><h3 id=\"构建repository\"><a href=\"#构建repository\" class=\"headerlink\" title=\"构建repository\"></a>构建repository</h3><ul>\n<li>登录github</li>\n<li>建立名为zengjay.github.io的repo<h3 id=\"本地部署配置\"><a href=\"#本地部署配置\" class=\"headerlink\" title=\"本地部署配置\"></a>本地部署配置</h3></li>\n<li><p>保证hexo-blog目录下的_config.yml文件deploy有如下格式：</p>\n<p>  deploy:</p>\n<pre><code>type: git\nrepo: git@github.com:ZengJay/ZengJay.github.io.git\nbranch: master\n</code></pre></li>\n</ul>\n<p><strong><a href=\"\">注意：</a></strong><br><a href=\"#\"><strong>type、repo、branch的冒号后面必须有空格</strong></a>,如果type后没空格，运行hexo d不会有反应。</p>\n<h3 id=\"只保留hexo的源码在一台本地机器的部署方法\"><a href=\"#只保留hexo的源码在一台本地机器的部署方法\" class=\"headerlink\" title=\"只保留hexo的源码在一台本地机器的部署方法\"></a>只保留hexo的源码在一台本地机器的部署方法</h3><ul>\n<li><p>在本地hexo博客源码目录hexo-blog下将博客部署到远程站点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p> More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n</li>\n</ul>\n<h3 id=\"在不同机器上对hexo的源码进行版本管理\"><a href=\"#在不同机器上对hexo的源码进行版本管理\" class=\"headerlink\" title=\"在不同机器上对hexo的源码进行版本管理\"></a>在不同机器上对hexo的源码进行版本管理</h3><ul>\n<li><a href=\"\"><strong>在建立好博客的本地源码后，不要部署到github的zengjay.github.com上。</strong></a></li>\n<li>在hexo-blog目录下构建git的master分支与hexo分支。master分支用来管理博客网页；hexo分支用来管理hexo的源码。</li>\n<li>构建git的master分支</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"# zengjay.github.io\"</span> &gt;&gt; README.md</div><div class=\"line\">git init</div><div class=\"line\">git add README.md</div><div class=\"line\">git commit -m <span class=\"string\">\"first commit\"</span></div><div class=\"line\">git remote add origin https://github.com/ZengJay/zengjay.github.io.git</div><div class=\"line\">git push -u origin maste</div></pre></td></tr></table></figure>\n<ul>\n<li>构建git的hexo分支</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b hexo //创建并切换到hexo分支</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"hexo initial commit\"</span></div><div class=\"line\">git push -u origin hexo</div></pre></td></tr></table></figure>\n<ul>\n<li>hexo部署</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure>\n<ul>\n<li>更新hexo源码后，提交到github</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"更新内容\"</span></div><div class=\"line\">git push -u origin hexo</div></pre></td></tr></table></figure>\n<ul>\n<li>新机器的hexo源码部署</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> -b hexo https://github.com/username/username.git</div></pre></td></tr></table></figure>\n<p>参考<a href=\"https://sawyersun.github.io/2017/01/20/Using-git-branch-manage-hexo-blog/\">here</a>，<a href=\"http://www.jianshu.com/p/6fb0b287f950\">here</a></p>\n<ul>\n<li>版本控制和持续集成</li>\n</ul>\n<p>参考<a href=\"https://formulahendry.github.io/2016/12/04/hexo-ci/#more\">here</a></p>\n<h2 id=\"常见问题及解决方法\"><a href=\"#常见问题及解决方法\" class=\"headerlink\" title=\"常见问题及解决方法\"></a>常见问题及解决方法</h2><h3 id=\"github的ssh公匙问题\"><a href=\"#github的ssh公匙问题\" class=\"headerlink\" title=\"github的ssh公匙问题\"></a>github的ssh公匙问题</h3><ul>\n<li><p>无法认证github的密匙</p>\n<p>  ssh -T git@github.com</p>\n</li>\n</ul>\n<p>出现如下问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: Permanently added <span class=\"string\">\"github.com,*.*.*.*\"</span>(RSA) to the list of known hosts.</div><div class=\"line\">Permission denied(public key).</div></pre></td></tr></table></figure>\n<p>原因：</p>\n<p>安装了github for windows，其ssh配置文件中认证文件为~.ssh\\github_rsa，ssh-keygen生成的不是此文件，因此，可以重装github，并把github_rsa文件的密匙添加到github网站个人信息中即可。</p>\n<p>详细请参考<a href=\"http://www.cnblogs.com/zjrodger/p/3952692.html\">网站</a></p>\n<ul>\n<li>无法联通github</li>\n</ul>\n<p>出现如下问题<br>    Permission denied (publickey). fatal: Could not read from remote repository.<br>    Please make sure you have the correct access rights and the repository exists.</p>\n<p>如图所示：<br><img src=\"/2017/02/03/Build-a-tech-blog-by-hexo/public-key-access-right.jpg\" alt=\"\"></p>\n<p>卸载git高版本，然后安装低版本（1.9）的git，可以到<a href=\"https://github.com/msysgit/msysgit/releases/tag/Git-1.9.5-preview20141217\">这里</a>下载。</p>\n<p>参考<a href=\"https://github.com/hexojs/hexo/issues/1495\">网站1</a>,<a href=\"http://lijialalala.github.io/2016/04/05/hexoxo-usage/\">网站2</a>,<a href=\"http://www.cognize.me/2015/08/22/msysgiterror/\">网站3</a></p>\n"},{"title":"mesos的配置及部署","toc":true,"_content":"\n### 问题1 \n\nactivated slave的数目为0\n\n### 解决\n\n由于虚拟机换了局域网的环境，ip重新分配，因此/etc/hosts里面的机器名与ip地址的映射关系变化了，需要重新修改。\n","source":"_posts/mesos.md","raw":"---\ntitle: mesos的配置及部署\ntoc: true\n---\n\n### 问题1 \n\nactivated slave的数目为0\n\n### 解决\n\n由于虚拟机换了局域网的环境，ip重新分配，因此/etc/hosts里面的机器名与ip地址的映射关系变化了，需要重新修改。\n","slug":"mesos","published":1,"date":"2017-02-02T14:28:03.433Z","updated":"2017-02-01T16:33:57.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbsjn00010wn4cy551yum","content":"<h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>activated slave的数目为0</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>由于虚拟机换了局域网的环境，ip重新分配，因此/etc/hosts里面的机器名与ip地址的映射关系变化了，需要重新修改。</p>\n","excerpt":"","more":"<h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>activated slave的数目为0</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>由于虚拟机换了局域网的环境，ip重新分配，因此/etc/hosts里面的机器名与ip地址的映射关系变化了，需要重新修改。</p>\n"},{"title":"Hexo高级功能","date":"2017-02-03T03:51:32.000Z","_content":"# 添加文档类别及标签\n\n# 添加图片\n## 配置\n首先，在 \\_config.yml 中设置\n    post_asset_folder: true\n注意：该选项一般在默认的\\_config.yml中有，如图\n![](/hexo-image-config.jpg)\n## md文件中添加\n使用hexo-asset-image插件插入图片\n\n首先,确认 _config.yml 中有 post_asset_folder:true 。\n\n其次，在 hexo-blog 目录，执行\n\n    npm install hexo-asset-image --save\n\n假设在\n\n    Hexo高级功能\n    ├── hexo-image-config.jpg\n\t└──\n    Hexo高级功能.md\n\n这样的目录结构（目录名和文章名一致）中，只要使用` ![](/hexo-image-config.jpg)` 就可以插入图片。\n\n参考[here](http://supermaryy.com/2016/07/02/)\n\n# 添加latex数学公式\n\n","source":"_posts/Hexo高级功能.md","raw":"---\ntitle: Hexo高级功能\ndate: 2017-02-03 11:51:32\ntags:\n---\n# 添加文档类别及标签\n\n# 添加图片\n## 配置\n首先，在 \\_config.yml 中设置\n    post_asset_folder: true\n注意：该选项一般在默认的\\_config.yml中有，如图\n![](/hexo-image-config.jpg)\n## md文件中添加\n使用hexo-asset-image插件插入图片\n\n首先,确认 _config.yml 中有 post_asset_folder:true 。\n\n其次，在 hexo-blog 目录，执行\n\n    npm install hexo-asset-image --save\n\n假设在\n\n    Hexo高级功能\n    ├── hexo-image-config.jpg\n\t└──\n    Hexo高级功能.md\n\n这样的目录结构（目录名和文章名一致）中，只要使用` ![](/hexo-image-config.jpg)` 就可以插入图片。\n\n参考[here](http://supermaryy.com/2016/07/02/)\n\n# 添加latex数学公式\n\n","slug":"Hexo高级功能","published":1,"updated":"2017-02-03T04:20:31.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbsk200030wn4aqptg5z2","content":"<h1 id=\"添加文档类别及标签\"><a href=\"#添加文档类别及标签\" class=\"headerlink\" title=\"添加文档类别及标签\"></a>添加文档类别及标签</h1><h1 id=\"添加图片\"><a href=\"#添加图片\" class=\"headerlink\" title=\"添加图片\"></a>添加图片</h1><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>首先，在 _config.yml 中设置<br>    post_asset_folder: true<br>注意：该选项一般在默认的_config.yml中有，如图<br><img src=\"/2017/02/03/Hexo高级功能/hexo-image-config.jpg\" alt=\"\"></p>\n<h2 id=\"md文件中添加\"><a href=\"#md文件中添加\" class=\"headerlink\" title=\"md文件中添加\"></a>md文件中添加</h2><p>使用hexo-asset-image插件插入图片</p>\n<p>首先,确认 _config.yml 中有 post_asset_folder:true 。</p>\n<p>其次，在 hexo-blog 目录，执行</p>\n<pre><code>npm install hexo-asset-image --save\n</code></pre><p>假设在</p>\n<pre><code>Hexo高级功能\n├── hexo-image-config.jpg\n└──\nHexo高级功能.md\n</code></pre><p>这样的目录结构（目录名和文章名一致）中，只要使用<code>![](/hexo-image-config.jpg)</code> 就可以插入图片。</p>\n<p>参考<a href=\"http://supermaryy.com/2016/07/02/\" target=\"_blank\" rel=\"external\">here</a></p>\n<h1 id=\"添加latex数学公式\"><a href=\"#添加latex数学公式\" class=\"headerlink\" title=\"添加latex数学公式\"></a>添加latex数学公式</h1>","excerpt":"","more":"<h1 id=\"添加文档类别及标签\"><a href=\"#添加文档类别及标签\" class=\"headerlink\" title=\"添加文档类别及标签\"></a>添加文档类别及标签</h1><h1 id=\"添加图片\"><a href=\"#添加图片\" class=\"headerlink\" title=\"添加图片\"></a>添加图片</h1><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>首先，在 _config.yml 中设置<br>    post_asset_folder: true<br>注意：该选项一般在默认的_config.yml中有，如图<br><img src=\"/2017/02/03/Hexo高级功能/hexo-image-config.jpg\" alt=\"\"></p>\n<h2 id=\"md文件中添加\"><a href=\"#md文件中添加\" class=\"headerlink\" title=\"md文件中添加\"></a>md文件中添加</h2><p>使用hexo-asset-image插件插入图片</p>\n<p>首先,确认 _config.yml 中有 post_asset_folder:true 。</p>\n<p>其次，在 hexo-blog 目录，执行</p>\n<pre><code>npm install hexo-asset-image --save\n</code></pre><p>假设在</p>\n<pre><code>Hexo高级功能\n├── hexo-image-config.jpg\n└──\nHexo高级功能.md\n</code></pre><p>这样的目录结构（目录名和文章名一致）中，只要使用<code>![](/hexo-image-config.jpg)</code> 就可以插入图片。</p>\n<p>参考<a href=\"http://supermaryy.com/2016/07/02/\">here</a></p>\n<h1 id=\"添加latex数学公式\"><a href=\"#添加latex数学公式\" class=\"headerlink\" title=\"添加latex数学公式\"></a>添加latex数学公式</h1>"},{"title":"将Spark运行在mesos上","_content":"\n运行启动各个集群服务前，必须保证/etc/hosts中的机器名和对应ip是在每个机器上实际正确对应的！！！\n\n\n## 启动mesos\n\n进入/usr/local/mesos/sbin执行\n```bash\n$ ./mesos-start-cluster.sh\n```\n## 启动hadoop 1\n\n进入/usr/local/hadoop/hadoop-1.2.1/sbin执行\n``` bash\n$ ./start-all.sh\n```\n\n将spark二进制包上传至hdfs,进入/usr/local/spark执行\n``` bash\n$ hadoop fs -put spark-1.4.1-bin-hadoop1.tgz /spark-1.4.1-bin-hadoop1.tgz\n```\n## spark on mesos的配置与启动\n\n+ 修改spark的配置文件\n\n```bash\n$ cd /usr/local/spark/spark-1.4.1-bin-hadoop1/conf\n$ sudo vi spark-env.sh\n```\n\n添加以下几行内容\n\n\t#mesos\n\texport MESOS_NATIVE_JAVA_LIBRARY=/usr/local/lib/libmesos.so\n\texport SPARK_EXECUTOR_URI=hdfs://spark-1.4.0-bin-hadoop2.6.tgz\n\n打开配置文件\n   \n```bash\n$ sudo vi spark-defaults.conf\n```\n\n添加以下几行内容\n\n\t#mesos\n\tspark.executor.uri hdfs://spark-1.4.1-bin-hadoop1.tgz\n\tspark.master mesos://Master:5050\n\n+ 启动spark\n\n  进入/usr/local/spark/spark-1.4.1-bin-hadoop1/sbin\n\n```bash\n$ ./start-history-server.sh\n$ ./start-all.sh\n$ ./start-mesos-dispatch.sh\n$ cd ..\n$ cd bin\n$ ./spark-shell\n```\n### 问题1\nmaster机器jps命令下，spark的Master未启动\n+  原因\nmaster的logs文件中发现命令行的ip为老局域网ip，在spark工作目录的conf下的spark-env.sh文件中，修改SPARK_MASTER_IP为新局域网中的master机器ip。\n\n### 问题2\n在mesos之上运行spark的应用程序,出现下面问题\n\tFailed to load native Mesos library from /home/dummy/.java/jdk1.6.0_45/jre/lib/amd64/server:/home/dummy/.java/jdk1.6.0_45/jre/lib/amd64:/home/dummy/.java/jdk1.6.0_45/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\n\tjava.lang.UnsatisfiedLinkError: no mesos in java.library.path\n\n+ 原因\n\n    spark_env.sh不会自动配置，需要运行spark_env.sh\n \n    ```bash\n\t$ source spark_env.sh\n    ```\n\n可以考虑将这个执行语句放到.bashrc文件中。\n\n### 问题3\n在intelliJ Idea下运行spark应用，出现\n\n\tNew master detected at master@192.168.1.103:5050\n\tNo credentials provided. Attempting to register without authentication\n\n+ 原因\n\n     spark未运行start-mesos-dispatch.sh ?","source":"_posts/spark_on_mesos.md","raw":"---\ntitle: 将Spark运行在mesos上\n---\n\n运行启动各个集群服务前，必须保证/etc/hosts中的机器名和对应ip是在每个机器上实际正确对应的！！！\n\n\n## 启动mesos\n\n进入/usr/local/mesos/sbin执行\n```bash\n$ ./mesos-start-cluster.sh\n```\n## 启动hadoop 1\n\n进入/usr/local/hadoop/hadoop-1.2.1/sbin执行\n``` bash\n$ ./start-all.sh\n```\n\n将spark二进制包上传至hdfs,进入/usr/local/spark执行\n``` bash\n$ hadoop fs -put spark-1.4.1-bin-hadoop1.tgz /spark-1.4.1-bin-hadoop1.tgz\n```\n## spark on mesos的配置与启动\n\n+ 修改spark的配置文件\n\n```bash\n$ cd /usr/local/spark/spark-1.4.1-bin-hadoop1/conf\n$ sudo vi spark-env.sh\n```\n\n添加以下几行内容\n\n\t#mesos\n\texport MESOS_NATIVE_JAVA_LIBRARY=/usr/local/lib/libmesos.so\n\texport SPARK_EXECUTOR_URI=hdfs://spark-1.4.0-bin-hadoop2.6.tgz\n\n打开配置文件\n   \n```bash\n$ sudo vi spark-defaults.conf\n```\n\n添加以下几行内容\n\n\t#mesos\n\tspark.executor.uri hdfs://spark-1.4.1-bin-hadoop1.tgz\n\tspark.master mesos://Master:5050\n\n+ 启动spark\n\n  进入/usr/local/spark/spark-1.4.1-bin-hadoop1/sbin\n\n```bash\n$ ./start-history-server.sh\n$ ./start-all.sh\n$ ./start-mesos-dispatch.sh\n$ cd ..\n$ cd bin\n$ ./spark-shell\n```\n### 问题1\nmaster机器jps命令下，spark的Master未启动\n+  原因\nmaster的logs文件中发现命令行的ip为老局域网ip，在spark工作目录的conf下的spark-env.sh文件中，修改SPARK_MASTER_IP为新局域网中的master机器ip。\n\n### 问题2\n在mesos之上运行spark的应用程序,出现下面问题\n\tFailed to load native Mesos library from /home/dummy/.java/jdk1.6.0_45/jre/lib/amd64/server:/home/dummy/.java/jdk1.6.0_45/jre/lib/amd64:/home/dummy/.java/jdk1.6.0_45/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\n\tjava.lang.UnsatisfiedLinkError: no mesos in java.library.path\n\n+ 原因\n\n    spark_env.sh不会自动配置，需要运行spark_env.sh\n \n    ```bash\n\t$ source spark_env.sh\n    ```\n\n可以考虑将这个执行语句放到.bashrc文件中。\n\n### 问题3\n在intelliJ Idea下运行spark应用，出现\n\n\tNew master detected at master@192.168.1.103:5050\n\tNo credentials provided. Attempting to register without authentication\n\n+ 原因\n\n     spark未运行start-mesos-dispatch.sh ?","slug":"spark_on_mesos","published":1,"date":"2017-02-02T14:28:03.440Z","updated":"2017-02-01T16:39:32.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbskp00040wn4ge7n2y5s","content":"<p>运行启动各个集群服务前，必须保证/etc/hosts中的机器名和对应ip是在每个机器上实际正确对应的！！！</p>\n<h2 id=\"启动mesos\"><a href=\"#启动mesos\" class=\"headerlink\" title=\"启动mesos\"></a>启动mesos</h2><p>进入/usr/local/mesos/sbin执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./mesos-start-cluster.sh</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop-1\"><a href=\"#启动hadoop-1\" class=\"headerlink\" title=\"启动hadoop 1\"></a>启动hadoop 1</h2><p>进入/usr/local/hadoop/hadoop-1.2.1/sbin执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./start-all.sh</div></pre></td></tr></table></figure></p>\n<p>将spark二进制包上传至hdfs,进入/usr/local/spark执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hadoop fs -put spark-1.4.1-bin-hadoop1.tgz /spark-1.4.1-bin-hadoop1.tgz</div></pre></td></tr></table></figure></p>\n<h2 id=\"spark-on-mesos的配置与启动\"><a href=\"#spark-on-mesos的配置与启动\" class=\"headerlink\" title=\"spark on mesos的配置与启动\"></a>spark on mesos的配置与启动</h2><ul>\n<li>修改spark的配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/spark/spark-1.4.1-bin-hadoop1/conf</div><div class=\"line\">$ sudo vi spark-env.sh</div></pre></td></tr></table></figure>\n<p>添加以下几行内容</p>\n<pre><code>#mesos\nexport MESOS_NATIVE_JAVA_LIBRARY=/usr/local/lib/libmesos.so\nexport SPARK_EXECUTOR_URI=hdfs://spark-1.4.0-bin-hadoop2.6.tgz\n</code></pre><p>打开配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi spark-defaults.conf</div></pre></td></tr></table></figure>\n<p>添加以下几行内容</p>\n<pre><code>#mesos\nspark.executor.uri hdfs://spark-1.4.1-bin-hadoop1.tgz\nspark.master mesos://Master:5050\n</code></pre><ul>\n<li><p>启动spark</p>\n<p>进入/usr/local/spark/spark-1.4.1-bin-hadoop1/sbin</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./start-history-server.sh</div><div class=\"line\">$ ./start-all.sh</div><div class=\"line\">$ ./start-mesos-dispatch.sh</div><div class=\"line\">$ <span class=\"built_in\">cd</span> ..</div><div class=\"line\">$ <span class=\"built_in\">cd</span> bin</div><div class=\"line\">$ ./spark-shell</div></pre></td></tr></table></figure>\n<h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>master机器jps命令下，spark的Master未启动</p>\n<ul>\n<li>原因<br>master的logs文件中发现命令行的ip为老局域网ip，在spark工作目录的conf下的spark-env.sh文件中，修改SPARK_MASTER_IP为新局域网中的master机器ip。</li>\n</ul>\n<h3 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h3><p>在mesos之上运行spark的应用程序,出现下面问题<br>    Failed to load native Mesos library from /home/dummy/.java/jdk1.6.0_45/jre/lib/amd64/server:/home/dummy/.java/jdk1.6.0_45/jre/lib/amd64:/home/dummy/.java/jdk1.6.0_45/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib<br>    java.lang.UnsatisfiedLinkError: no mesos in java.library.path</p>\n<ul>\n<li><p>原因</p>\n<p>  spark_env.sh不会自动配置，需要运行spark_env.sh</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">source</span> spark_env.sh</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以考虑将这个执行语句放到.bashrc文件中。</p>\n<h3 id=\"问题3\"><a href=\"#问题3\" class=\"headerlink\" title=\"问题3\"></a>问题3</h3><p>在intelliJ Idea下运行spark应用，出现</p>\n<pre><code>New master detected at master@192.168.1.103:5050\nNo credentials provided. Attempting to register without authentication\n</code></pre><ul>\n<li><p>原因</p>\n<p>   spark未运行start-mesos-dispatch.sh ?</p>\n</li>\n</ul>\n","excerpt":"","more":"<p>运行启动各个集群服务前，必须保证/etc/hosts中的机器名和对应ip是在每个机器上实际正确对应的！！！</p>\n<h2 id=\"启动mesos\"><a href=\"#启动mesos\" class=\"headerlink\" title=\"启动mesos\"></a>启动mesos</h2><p>进入/usr/local/mesos/sbin执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./mesos-start-cluster.sh</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop-1\"><a href=\"#启动hadoop-1\" class=\"headerlink\" title=\"启动hadoop 1\"></a>启动hadoop 1</h2><p>进入/usr/local/hadoop/hadoop-1.2.1/sbin执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./start-all.sh</div></pre></td></tr></table></figure></p>\n<p>将spark二进制包上传至hdfs,进入/usr/local/spark执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hadoop fs -put spark-1.4.1-bin-hadoop1.tgz /spark-1.4.1-bin-hadoop1.tgz</div></pre></td></tr></table></figure></p>\n<h2 id=\"spark-on-mesos的配置与启动\"><a href=\"#spark-on-mesos的配置与启动\" class=\"headerlink\" title=\"spark on mesos的配置与启动\"></a>spark on mesos的配置与启动</h2><ul>\n<li>修改spark的配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/spark/spark-1.4.1-bin-hadoop1/conf</div><div class=\"line\">$ sudo vi spark-env.sh</div></pre></td></tr></table></figure>\n<p>添加以下几行内容</p>\n<pre><code>#mesos\nexport MESOS_NATIVE_JAVA_LIBRARY=/usr/local/lib/libmesos.so\nexport SPARK_EXECUTOR_URI=hdfs://spark-1.4.0-bin-hadoop2.6.tgz\n</code></pre><p>打开配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi spark-defaults.conf</div></pre></td></tr></table></figure>\n<p>添加以下几行内容</p>\n<pre><code>#mesos\nspark.executor.uri hdfs://spark-1.4.1-bin-hadoop1.tgz\nspark.master mesos://Master:5050\n</code></pre><ul>\n<li><p>启动spark</p>\n<p>进入/usr/local/spark/spark-1.4.1-bin-hadoop1/sbin</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./start-history-server.sh</div><div class=\"line\">$ ./start-all.sh</div><div class=\"line\">$ ./start-mesos-dispatch.sh</div><div class=\"line\">$ <span class=\"built_in\">cd</span> ..</div><div class=\"line\">$ <span class=\"built_in\">cd</span> bin</div><div class=\"line\">$ ./spark-shell</div></pre></td></tr></table></figure>\n<h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>master机器jps命令下，spark的Master未启动</p>\n<ul>\n<li>原因<br>master的logs文件中发现命令行的ip为老局域网ip，在spark工作目录的conf下的spark-env.sh文件中，修改SPARK_MASTER_IP为新局域网中的master机器ip。</li>\n</ul>\n<h3 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h3><p>在mesos之上运行spark的应用程序,出现下面问题<br>    Failed to load native Mesos library from /home/dummy/.java/jdk1.6.0_45/jre/lib/amd64/server:/home/dummy/.java/jdk1.6.0_45/jre/lib/amd64:/home/dummy/.java/jdk1.6.0_45/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib<br>    java.lang.UnsatisfiedLinkError: no mesos in java.library.path</p>\n<ul>\n<li><p>原因</p>\n<p>  spark_env.sh不会自动配置，需要运行spark_env.sh</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">source</span> spark_env.sh</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以考虑将这个执行语句放到.bashrc文件中。</p>\n<h3 id=\"问题3\"><a href=\"#问题3\" class=\"headerlink\" title=\"问题3\"></a>问题3</h3><p>在intelliJ Idea下运行spark应用，出现</p>\n<pre><code>New master detected at master@192.168.1.103:5050\nNo credentials provided. Attempting to register without authentication\n</code></pre><ul>\n<li><p>原因</p>\n<p>   spark未运行start-mesos-dispatch.sh ?</p>\n</li>\n</ul>\n"},{"title":"Spark不同版本切换","_content":"\n改变.bashrc中的sparkhome","source":"_posts/spark_version_switch.md","raw":"---\ntitle: Spark不同版本切换\n---\n\n改变.bashrc中的sparkhome","slug":"spark_version_switch","published":1,"date":"2017-02-02T14:28:03.445Z","updated":"2017-02-01T16:33:57.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbslj00060wn43v0ylmoq","content":"<p>改变.bashrc中的sparkhome</p>\n","excerpt":"","more":"<p>改变.bashrc中的sparkhome</p>\n"},{"title":"Spark应用的调用方法","_content":"## spark应用提交到spark集群\n\n+ 进入$SPARK_HOME，运行\n\n```bash\nbin/spark-submit --class spark.tutorial.geo.GeoTutorialExec --master spark://master:6066 --deploy-mode cluster file:///root/Downloads/spark-cluster-test/target/scala-2.10/spark-cluster-test-assembly-1.0.jar\n```\n\n+ spark应用包的生成 \n\n在应用程序目录中执行包\n\n```bash\nsbt package\n```\n\n这样生成的spark包，关联包无法加载\n\n需要在应用程序目录中执行\n\n```bash\nsbt assembly\n```\n\n在project中添加plugin.sbt，在项目根目录下添加assembly.sbt，在项目根目录下的build.sbt中依赖库spark的后面加上\"provided\"。这样，才能生成assembly的jar包。\n\n\n\n## 远程网络服务调用spark应用，将其提交到spark集群\n\n+ javascript调用spark restful 接口无法完成，因为hadoop1的jetty无法进行跨域访问\n\n+ 采用java服务的方式来访问\n\n+ 远程提交spark应用中，需要在集群的节点中添加/tmp/spark-events/目录\n\n","source":"_posts/submit-spark-app.md","raw":"---\ntitle: Spark应用的调用方法\n---\n## spark应用提交到spark集群\n\n+ 进入$SPARK_HOME，运行\n\n```bash\nbin/spark-submit --class spark.tutorial.geo.GeoTutorialExec --master spark://master:6066 --deploy-mode cluster file:///root/Downloads/spark-cluster-test/target/scala-2.10/spark-cluster-test-assembly-1.0.jar\n```\n\n+ spark应用包的生成 \n\n在应用程序目录中执行包\n\n```bash\nsbt package\n```\n\n这样生成的spark包，关联包无法加载\n\n需要在应用程序目录中执行\n\n```bash\nsbt assembly\n```\n\n在project中添加plugin.sbt，在项目根目录下添加assembly.sbt，在项目根目录下的build.sbt中依赖库spark的后面加上\"provided\"。这样，才能生成assembly的jar包。\n\n\n\n## 远程网络服务调用spark应用，将其提交到spark集群\n\n+ javascript调用spark restful 接口无法完成，因为hadoop1的jetty无法进行跨域访问\n\n+ 采用java服务的方式来访问\n\n+ 远程提交spark应用中，需要在集群的节点中添加/tmp/spark-events/目录\n\n","slug":"submit-spark-app","published":1,"date":"2017-02-02T14:28:03.453Z","updated":"2017-02-01T16:33:57.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciypjbslp00070wn4l8j4m6g4","content":"<h2 id=\"spark应用提交到spark集群\"><a href=\"#spark应用提交到spark集群\" class=\"headerlink\" title=\"spark应用提交到spark集群\"></a>spark应用提交到spark集群</h2><ul>\n<li>进入$SPARK_HOME，运行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bin/spark-submit --class spark.tutorial.geo.GeoTutorialExec --master spark://master:6066 --deploy-mode cluster file:///root/Downloads/spark-cluster-test/target/scala-2.10/spark-cluster-test-assembly-1.0.jar</div></pre></td></tr></table></figure>\n<ul>\n<li>spark应用包的生成 </li>\n</ul>\n<p>在应用程序目录中执行包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbt package</div></pre></td></tr></table></figure>\n<p>这样生成的spark包，关联包无法加载</p>\n<p>需要在应用程序目录中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbt assembly</div></pre></td></tr></table></figure>\n<p>在project中添加plugin.sbt，在项目根目录下添加assembly.sbt，在项目根目录下的build.sbt中依赖库spark的后面加上”provided”。这样，才能生成assembly的jar包。</p>\n<h2 id=\"远程网络服务调用spark应用将其提交到spark集群\"><a href=\"#远程网络服务调用spark应用，将其提交到spark集群\" class=\"headerlink\" title=\"远程网络服务调用spark应用，将其提交到spark集群\"></a>远程网络服务调用spark应用，将其提交到spark集群</h2><ul>\n<li><p>javascript调用spark restful 接口无法完成，因为hadoop1的jetty无法进行跨域访问</p>\n</li>\n<li><p>采用java服务的方式来访问</p>\n</li>\n<li><p>远程提交spark应用中，需要在集群的节点中添加/tmp/spark-events/目录</p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"spark应用提交到spark集群\"><a href=\"#spark应用提交到spark集群\" class=\"headerlink\" title=\"spark应用提交到spark集群\"></a>spark应用提交到spark集群</h2><ul>\n<li>进入$SPARK_HOME，运行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bin/spark-submit --class spark.tutorial.geo.GeoTutorialExec --master spark://master:6066 --deploy-mode cluster file:///root/Downloads/spark-cluster-test/target/scala-2.10/spark-cluster-test-assembly-1.0.jar</div></pre></td></tr></table></figure>\n<ul>\n<li>spark应用包的生成 </li>\n</ul>\n<p>在应用程序目录中执行包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbt package</div></pre></td></tr></table></figure>\n<p>这样生成的spark包，关联包无法加载</p>\n<p>需要在应用程序目录中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbt assembly</div></pre></td></tr></table></figure>\n<p>在project中添加plugin.sbt，在项目根目录下添加assembly.sbt，在项目根目录下的build.sbt中依赖库spark的后面加上”provided”。这样，才能生成assembly的jar包。</p>\n<h2 id=\"远程网络服务调用spark应用，将其提交到spark集群\"><a href=\"#远程网络服务调用spark应用，将其提交到spark集群\" class=\"headerlink\" title=\"远程网络服务调用spark应用，将其提交到spark集群\"></a>远程网络服务调用spark应用，将其提交到spark集群</h2><ul>\n<li><p>javascript调用spark restful 接口无法完成，因为hadoop1的jetty无法进行跨域访问</p>\n</li>\n<li><p>采用java服务的方式来访问</p>\n</li>\n<li><p>远程提交spark应用中，需要在集群的节点中添加/tmp/spark-events/目录</p>\n</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/Build-a-tech-blog-by-hexo/public-key-access-right.jpg","slug":"public-key-access-right.jpg","post":"ciypjbsjd00000wn4id26icp1","modified":0,"renderable":0},{"_id":"source/_posts/Hexo高级功能/hexo-image-config.jpg","slug":"hexo-image-config.jpg","post":"ciypjbsk200030wn4aqptg5z2","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ciypjbsjd00000wn4id26icp1","tag_id":"ciypjbsjt00020wn448hysfjl","_id":"ciypjbskt00050wn4s4mtzs1o"}],"Tag":[{"name":"hexo","_id":"ciypjbsjt00020wn448hysfjl"}]}}